#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mk make_pair
#define ll long long
using namespace std;

ll n,m;
ll arr[501][501];
vector<pair<ll,ll>> adj[501][501];
vector<pair<ll,ll>> spl;
ll get_ans(){
    queue<pair<ll,ll>> q;
    vector<vector<bool>> vis(n+1,vector<bool>(m+1,0));
    vector<vector<ll>> d(n+1,vector<ll>(m+1));
    for(auto p : spl){
        d[p.ff][p.ss]=0;
        vis[p.ff][p.ss]=1;
        q.push(p);
    }
    ll ans=0;
    while(!q.empty()){
        auto p = q.front();
        q.pop();
        for(auto x : adj[p.ff][p.ss] ){
            if(!vis[x.ff][x.ss]){
                vis[x.ff][x.ss]=1;
                q.push(x);
                d[x.ff][x.ss]=d[p.ff][p.ss]+1;
                ans=max(ans,d[x.ff][x.ss]);
            }
        }
    }
    return ans;
}
void add_edges(){
 
    for(ll i=1;i<=n;i++){
        for(ll j=1;j<=m;j++){
            adj[i][j].clear();
            ll di[]={-1,-1,-1,0,0,1,1,1};
            ll dj[]={-1,0,1,-1,1,-1,0,1};
            for(ll k=0;k<8;k++){
                ll x=i+di[k];
                ll y=j+dj[k];
                if(x>=1 && y>=1 && x<=n && y<=m){
                    adj[i][j].pb(mk(x,y));
                }
            }
        }
    }
    return;
}
int main(){
    ll t;
    cin>>t;
    //ll n,m;
    while(t--){
        cin>>n>>m;
        ll mx=0;
        for(ll i=1;i<=n;i++){
            for(ll j=1;j<=m;j++){
                cin>>arr[i][j];
                mx=max(mx,arr[i][j]);
            }
        }
        add_edges();
        spl.clear();
        for(ll i=1;i<=n;i++){
            for(ll j=1;j<=m;j++){
                if(arr[i][j]==mx){
                    spl.pb(mk(i,j));
                }
            }
        }
        cout<<get_ans()<<endl;
        
    }
    
    return 0;
}
